// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package generated

import (
	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type ApiKey struct {
	ID         uuid.UUID          `json:"id"`
	CustomerID pgtype.UUID        `json:"customer_id"`
	ApiKey     string             `json:"api_key"`
	HashedKey  string             `json:"hashed_key"`
	Revoked    pgtype.Bool        `json:"revoked"`
	CreatedAt  pgtype.Timestamptz `json:"created_at"`
	LastUsedAt pgtype.Timestamptz `json:"last_used_at"`
	Meta       []byte             `json:"meta"`
}

type Customer struct {
	ID                   uuid.UUID          `json:"id"`
	UserID               pgtype.UUID        `json:"user_id"`
	Email                pgtype.Text        `json:"email"`
	DefaultPaymentMethod []byte             `json:"default_payment_method"`
	CreditBalanceCents   pgtype.Int8        `json:"credit_balance_cents"`
	CreatedAt            pgtype.Timestamptz `json:"created_at"`
	UpdatedAt            pgtype.Timestamptz `json:"updated_at"`
}

type Invoice struct {
	ID               uuid.UUID          `json:"id"`
	CustomerID       pgtype.UUID        `json:"customer_id"`
	SubscriptionID   pgtype.UUID        `json:"subscription_id"`
	GatewayInvoiceID pgtype.Text        `json:"gateway_invoice_id"`
	Status           string             `json:"status"`
	AmountCents      int64              `json:"amount_cents"`
	Currency         string             `json:"currency"`
	IssuedAt         pgtype.Timestamptz `json:"issued_at"`
	DueAt            pgtype.Timestamptz `json:"due_at"`
	PaidAt           pgtype.Timestamptz `json:"paid_at"`
	PdfUrl           pgtype.Text        `json:"pdf_url"`
	Metadata         []byte             `json:"metadata"`
	CreatedAt        pgtype.Timestamptz `json:"created_at"`
}

type Plan struct {
	ID          uuid.UUID          `json:"id"`
	Slug        string             `json:"slug"`
	Name        string             `json:"name"`
	Description pgtype.Text        `json:"description"`
	PriceCents  int64              `json:"price_cents"`
	Currency    string             `json:"currency"`
	Interval    string             `json:"interval"`
	QuotaLimits []byte             `json:"quota_limits"`
	Meta        []byte             `json:"meta"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `json:"updated_at"`
}

type Subscription struct {
	ID                    uuid.UUID          `json:"id"`
	CustomerID            pgtype.UUID        `json:"customer_id"`
	PlanID                pgtype.UUID        `json:"plan_id"`
	Status                string             `json:"status"`
	TrialEndsAt           pgtype.Timestamptz `json:"trial_ends_at"`
	CurrentPeriodStart    pgtype.Timestamptz `json:"current_period_start"`
	CurrentPeriodEnd      pgtype.Timestamptz `json:"current_period_end"`
	CancelAtPeriodEnd     pgtype.Bool        `json:"cancel_at_period_end"`
	GatewaySubscriptionID pgtype.Text        `json:"gateway_subscription_id"`
	Metadata              []byte             `json:"metadata"`
	CreatedAt             pgtype.Timestamptz `json:"created_at"`
	UpdatedAt             pgtype.Timestamptz `json:"updated_at"`
}

type Transaction struct {
	ID               uuid.UUID          `json:"id"`
	InvoiceID        pgtype.UUID        `json:"invoice_id"`
	CustomerID       pgtype.UUID        `json:"customer_id"`
	Gateway          string             `json:"gateway"`
	GatewayPaymentID pgtype.Text        `json:"gateway_payment_id"`
	AmountCents      int64              `json:"amount_cents"`
	Currency         string             `json:"currency"`
	Status           string             `json:"status"`
	IdempotencyKey   pgtype.Text        `json:"idempotency_key"`
	RawResponse      []byte             `json:"raw_response"`
	CreatedAt        pgtype.Timestamptz `json:"created_at"`
}

type UsageAggregate struct {
	ID             uuid.UUID          `json:"id"`
	CustomerID     pgtype.UUID        `json:"customer_id"`
	PeriodStart    pgtype.Date        `json:"period_start"`
	PeriodEnd      pgtype.Date        `json:"period_end"`
	Metric         string             `json:"metric"`
	TotalQuantity  pgtype.Int8        `json:"total_quantity"`
	TotalCostCents pgtype.Int8        `json:"total_cost_cents"`
	UpdatedAt      pgtype.Timestamptz `json:"updated_at"`
}

type UsageEvent struct {
	ID         uuid.UUID          `json:"id"`
	CustomerID pgtype.UUID        `json:"customer_id"`
	ApiKeyID   pgtype.UUID        `json:"api_key_id"`
	Metric     string             `json:"metric"`
	Quantity   int64              `json:"quantity"`
	CostCents  pgtype.Int8        `json:"cost_cents"`
	ReportedAt pgtype.Timestamptz `json:"reported_at"`
	Processed  pgtype.Bool        `json:"processed"`
	Metadata   []byte             `json:"metadata"`
}

type User struct {
	ID           uuid.UUID          `json:"id"`
	Email        string             `json:"email"`
	PasswordHash string             `json:"password_hash"`
	Name         string             `json:"name"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
	UpdatedAt    pgtype.Timestamptz `json:"updated_at"`
}
